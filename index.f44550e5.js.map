{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,SAAS,gBAAgB,CAAC,YACpC,EAAY,EAAM,aAAa,CAAC,SAChC,EAAO,EAAM,gBAAgB,CAAC,YAE9B,EAAgB,CAAC,EAEvB,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACO,CAAa,CAAC,EAAE,EACnB,CAAA,CAAa,CAAC,EAAE,CAAG,KADrB,CAGF,GAEA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,SAAU,CAAE,EAC3C,IAAM,EAAoB,AAAU,IAAV,GAAe,AAAU,IAAV,EACnC,EAAY,AAAyB,SAAzB,CAAa,CAAC,EAAM,CAAc,MAAQ,MAE5D,CAAA,CAAa,CAAC,EAAM,CAAG,EAEvB,IAAM,EAAW,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,EAAI,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,EAAA,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,EAAA,I,A,W,M,A,U,wI,G,EAAM,IAAI,CAAC,SAAC,CAAA,CAAG,CAApC,EACE,IAqBM,EACA,EAtBA,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,CAClC,EAAQ,EAAE,KAAK,CAAC,EAAM,CAAC,WAAW,QAExC,AAAI,GAkBE,EAAO,WAAW,AAjBJ,EAiBM,OAAO,CAAC,UAAW,KACvC,EAAO,WAAW,AAlBG,EAkBD,OAAO,CAAC,UAAW,KAE7C,AAAI,AAAyB,QAAzB,CAAa,CAAC,EAAM,CACf,EAAO,EAEP,EAAO,GArBd,AAAI,AAAyB,QAAzB,CAAa,CAAC,EAAM,CACf,EAAM,aAAa,CAAC,GAEpB,EAAM,aAAa,CAAC,EAGjC,EAEA,CAAA,EAAU,SAAS,CAAG,GA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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\nvar headers = document.querySelectorAll(\"thead th\");\nvar tableBody = table.querySelector(\"tbody\");\nvar rows = table.querySelectorAll(\"tbody tr\");\nvar sortDirection = {};\nheaders.forEach(function(header, i) {\n    if (!sortDirection[i]) sortDirection[i] = \"asc\";\n});\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function(el) {\n        var columnIncludesNum = index === 3 || index === 4;\n        var direction = sortDirection[index] === \"desc\" ? \"asc\" : \"desc\";\n        sortDirection[index] = direction;\n        var sortRows = _to_consumable_array(rows).sort(function(a, b) {\n            var aCell = a.cells[index].textContent;\n            var bCell = b.cells[index].textContent;\n            if (columnIncludesNum) return sortNumber(aCell, bCell);\n            else {\n                if (sortDirection[index] === \"asc\") return aCell.localeCompare(bCell);\n                else return bCell.localeCompare(aCell);\n            }\n        });\n        tableBody.innerHTML = \"\";\n        sortRows.forEach(function(row) {\n            tableBody.appendChild(row);\n        });\n        function sortNumber(a, b) {\n            var numA = parseFloat(a.replace(/[^\\d,]/g, \"\"));\n            var numB = parseFloat(b.replace(/[^\\d,]/g, \"\"));\n            if (sortDirection[index] === \"asc\") return numB - numA;\n            else return numA - numB;\n        }\n    });\n});\ntableBody.addEventListener(\"click\", function(el) {\n    var clickedRow = el.target.closest(\"tr\");\n    document.querySelectorAll(\"tbody tr\").forEach(function(r) {\n        r.classList.remove(\"active\");\n    });\n    clickedRow.classList.add(\"active\");\n});\nvar form = document.createElement(\"form\");\nform.classList.add(\"new-employee-form\");\nvar msg = document.createElement(\"div\");\nmsg.setAttribute(\"data-qa\", \"notification\");\nmsg.classList.add(\"error\");\ndocument.body.appendChild(msg);\nvar nameLabel = document.createElement(\"label\");\nnameLabel.textContent = \"Name:\";\nvar nameInput = document.createElement(\"input\");\nnameInput.type = \"text\";\nnameInput.name = \"name\";\nnameInput.setAttribute(\"data-qa\", \"name\");\nnameInput.required = true;\nnameLabel.appendChild(nameInput);\nform.appendChild(nameLabel);\nvar positionLabel = document.createElement(\"label\");\nvar positionInput = document.createElement(\"input\");\npositionLabel.textContent = \"Position:\";\npositionInput.type = \"text\";\npositionInput.name = \"position\";\npositionInput.setAttribute(\"data-qa\", \"position\");\npositionInput.required = true;\npositionLabel.appendChild(positionInput);\nform.appendChild(positionLabel);\nvar cities = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nvar officeLabel = document.createElement(\"label\");\nvar selectOffice = document.createElement(\"select\");\nofficeLabel.textContent = \"Office:\";\nselectOffice.name = \"office\";\nselectOffice.setAttribute(\"data-qa\", \"office\");\nselectOffice.required = true;\ncities.forEach(function(el) {\n    var optionOfficeFirst = document.createElement(\"option\");\n    optionOfficeFirst.textContent = el;\n    selectOffice.appendChild(optionOfficeFirst);\n});\nofficeLabel.appendChild(selectOffice);\nform.appendChild(officeLabel);\nvar ageLabel = document.createElement(\"label\");\nvar ageInput = document.createElement(\"input\");\nageLabel.textContent = \"Age:\";\nageInput.type = \"number\";\nageInput.name = \"age\";\nageInput.setAttribute(\"data-qa\", \"age\");\nageInput.required = true;\nageLabel.appendChild(ageInput);\nform.appendChild(ageLabel);\nvar salaryLabel = document.createElement(\"label\");\nvar salaryInput = document.createElement(\"input\");\nsalaryLabel.textContent = \"Salary:\";\nsalaryInput.type = \"number\";\nsalaryInput.name = \"salary\";\nsalaryInput.setAttribute(\"data-qa\", \"salary\");\nsalaryInput.required = true;\nsalaryLabel.appendChild(salaryInput);\nform.appendChild(salaryLabel);\nvar btn = document.createElement(\"button\");\nbtn.textContent = \"Save to table\";\nform.appendChild(btn);\ndocument.body.appendChild(form);\nform.addEventListener(\"submit\", function(e) {\n    e.preventDefault();\n    msg.textContent = \"\";\n    msg.className = \"\";\n    var nam = form.elements.name.value;\n    var position = form.elements.position.value;\n    var office = form.elements.office.value;\n    var age = parseInt(form.elements.age.value, 10);\n    var salary = parseFloat(form.elements.salary.value);\n    if (nam.length < 4) {\n        alertMessage(\"name must be at least 4 characters long\", \"error\");\n        return;\n    }\n    if (age < 18 || age > 90) {\n        alertMessage(\"age must be betwen 18 - 90\", \"error\");\n        return;\n    }\n    if (isNaN(salary) || salary <= 0) {\n        alertMessage(\"Salary must be a positive number.\", \"error\");\n        return;\n    }\n    if (position.length < 3) {\n        alertMessage(\"position must be at least 3 characters long\", \"error\");\n        return;\n    }\n    var formattedSalary = salary.toLocaleString(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0\n    });\n    var tbody = document.querySelector(\"table tbody\");\n    var row = tbody.insertRow();\n    row.insertCell().textContent = nam;\n    row.insertCell().textContent = position;\n    row.insertCell().textContent = office;\n    row.insertCell().textContent = age;\n    row.insertCell().textContent = formattedSalary;\n    alertMessage(\"New employee added to the table.\", \"success\");\n    form.reset();\n});\nfunction alertMessage(mesage, type) {\n    msg.textContent = mesage;\n    msg.className = type;\n}\n\n//# sourceMappingURL=index.f44550e5.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = document.querySelectorAll('thead th');\nconst tableBody = table.querySelector('tbody');\nconst rows = table.querySelectorAll('tbody tr');\n\nconst sortDirection = {};\n\nheaders.forEach((header, i) => {\n  if (!sortDirection[i]) {\n    sortDirection[i] = 'asc';\n  }\n});\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', function (el) {\n    const columnIncludesNum = index === 3 || index === 4;\n    const direction = sortDirection[index] === 'desc' ? 'asc' : 'desc';\n\n    sortDirection[index] = direction;\n\n    const sortRows = [...rows].sort((a, b) => {\n      const aCell = a.cells[index].textContent;\n      const bCell = b.cells[index].textContent;\n\n      if (columnIncludesNum) {\n        return sortNumber(aCell, bCell);\n      } else {\n        if (sortDirection[index] === 'asc') {\n          return aCell.localeCompare(bCell);\n        } else {\n          return bCell.localeCompare(aCell);\n        }\n      }\n    });\n\n    tableBody.innerHTML = '';\n\n    sortRows.forEach((row) => {\n      tableBody.appendChild(row);\n    });\n\n    function sortNumber(a, b) {\n      const numA = parseFloat(a.replace(/[^\\d,]/g, ''));\n      const numB = parseFloat(b.replace(/[^\\d,]/g, ''));\n\n      if (sortDirection[index] === 'asc') {\n        return numB - numA;\n      } else {\n        return numA - numB;\n      }\n    }\n  });\n});\n\ntableBody.addEventListener('click', function (el) {\n  const clickedRow = el.target.closest('tr');\n\n  document.querySelectorAll('tbody tr').forEach((r) => {\n    r.classList.remove('active');\n  });\n  clickedRow.classList.add('active');\n});\n\nconst form = document.createElement('form');\n\nform.classList.add('new-employee-form');\n\nconst msg = document.createElement('div');\n\nmsg.setAttribute('data-qa', 'notification');\n\nmsg.classList.add('error');\ndocument.body.appendChild(msg);\n\nconst nameLabel = document.createElement('label');\n\nnameLabel.textContent = 'Name:';\n\nconst nameInput = document.createElement('input');\n\nnameInput.type = 'text';\nnameInput.name = 'name';\nnameInput.setAttribute('data-qa', 'name');\nnameInput.required = true;\n\nnameLabel.appendChild(nameInput);\nform.appendChild(nameLabel);\n\nconst positionLabel = document.createElement('label');\nconst positionInput = document.createElement('input');\n\npositionLabel.textContent = 'Position:';\npositionInput.type = 'text';\npositionInput.name = 'position';\npositionInput.setAttribute('data-qa', 'position');\npositionInput.required = true;\n\npositionLabel.appendChild(positionInput);\nform.appendChild(positionLabel);\n\nconst cities = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nconst officeLabel = document.createElement('label');\nconst selectOffice = document.createElement('select');\n\nofficeLabel.textContent = 'Office:';\nselectOffice.name = 'office';\nselectOffice.setAttribute('data-qa', 'office');\nselectOffice.required = true;\n\ncities.forEach((el) => {\n  const optionOfficeFirst = document.createElement('option');\n\n  optionOfficeFirst.textContent = el;\n\n  selectOffice.appendChild(optionOfficeFirst);\n});\n\nofficeLabel.appendChild(selectOffice);\nform.appendChild(officeLabel);\n\nconst ageLabel = document.createElement('label');\nconst ageInput = document.createElement('input');\n\nageLabel.textContent = 'Age:';\nageInput.type = 'number';\nageInput.name = 'age';\nageInput.setAttribute('data-qa', 'age');\nageInput.required = true;\nageLabel.appendChild(ageInput);\nform.appendChild(ageLabel);\n\nconst salaryLabel = document.createElement('label');\nconst salaryInput = document.createElement('input');\n\nsalaryLabel.textContent = 'Salary:';\nsalaryInput.type = 'number';\nsalaryInput.name = 'salary';\nsalaryInput.setAttribute('data-qa', 'salary');\nsalaryInput.required = true;\n\nsalaryLabel.appendChild(salaryInput);\nform.appendChild(salaryLabel);\n\nconst btn = document.createElement('button');\n\nbtn.textContent = 'Save to table';\n\nform.appendChild(btn);\n\ndocument.body.appendChild(form);\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault();\n  msg.textContent = '';\n  msg.className = '';\n\n  const nam = form.elements.name.value;\n  const position = form.elements.position.value;\n  const office = form.elements.office.value;\n  const age = parseInt(form.elements.age.value, 10);\n  const salary = parseFloat(form.elements.salary.value);\n\n  if (nam.length < 4) {\n    alertMessage('name must be at least 4 characters long', 'error');\n\n    return;\n  }\n\n  if (age < 18 || age > 90) {\n    alertMessage('age must be betwen 18 - 90', 'error');\n\n    return;\n  }\n\n  if (isNaN(salary) || salary <= 0) {\n    alertMessage('Salary must be a positive number.', 'error');\n\n    return;\n  }\n\n  if (position.length < 3) {\n    alertMessage('position must be at least 3 characters long', 'error');\n\n    return;\n  }\n\n  const formattedSalary = salary.toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n  });\n\n  const tbody = document.querySelector('table tbody');\n  const row = tbody.insertRow();\n\n  row.insertCell().textContent = nam;\n  row.insertCell().textContent = position;\n  row.insertCell().textContent = office;\n  row.insertCell().textContent = age;\n  row.insertCell().textContent = formattedSalary;\n\n  alertMessage('New employee added to the table.', 'success');\n  form.reset();\n});\n\nfunction alertMessage(mesage, type) {\n  msg.textContent = mesage;\n  msg.className = type;\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","headers","querySelectorAll","tableBody","rows","sortDirection","forEach","header","index","addEventListener","el","columnIncludesNum","direction","sortRows","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","a","b","numA","numB","aCell","cells","textContent","bCell","parseFloat","replace","localeCompare","innerHTML","row","appendChild","clickedRow","target","closest","r","classList","remove","add","form","createElement","msg","setAttribute","body","nameLabel","nameInput","type","required","positionLabel","positionInput","officeLabel","selectOffice","cities","optionOfficeFirst","ageLabel","ageInput","salaryLabel","salaryInput","btn","alertMessage","mesage","className","e","preventDefault","nam","elements","value","position","office","age","parseInt","salary","isNaN","formattedSalary","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","tbody","insertRow","insertCell","reset"],"version":3,"file":"index.f44550e5.js.map"}